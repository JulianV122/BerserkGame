/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.autonoma.gui;

import Graficos.Pantalla;
import co.edu.autonoma.elementos.Drawable;
import co.edu.autonoma.elementos.GameWorld;
import co.edu.autonoma.elementos.Monstruo;

import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.io.IOException;

/**
 *
 * @author Julian
 */
public class GameWindow extends javax.swing.JFrame implements Drawable,Runnable{
    private GameWorld gameWorld;
    private static Thread thread;
    private static volatile boolean isWorking = false;
    
    private static int aps = 0;
    private static int fps = 0;
    private static int x=0;
    private static int y=0;
    private static Pantalla pantalla;
    private static BufferedImage imagen = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
    private static int [] pixeles = ((DataBufferInt) imagen.getRaster().getDataBuffer()).getData();
    
    /**
     * Creates new form GameWindow
     */
    public GameWindow() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        pantalla = new Pantalla(WIDTH, HEIGHT);
    }
    
    public void setGameWorld(GameWorld gameWorld){
        this.gameWorld = gameWorld;
        gameWorld.setDrawable(this);
    }

    @Override
    public void paint(Graphics g){
        //gameWorld.draw(g);
    }
    
    public static void main(String args[]) throws IOException {
        GameWindow window = new GameWindow();
        GameWorld gameWorld = new GameWorld(window.getWidth(), window.getHeight());
        window.setGameWorld(gameWorld);
        window.iniciar();
        
        window.setTitle("Berserk Game");
        window.setVisible(true);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_Q)
            System.exit(0);
        
        if(evt.getKeyCode() == KeyEvent.VK_UP | 
           evt.getKeyCode() == KeyEvent.VK_DOWN |
           evt.getKeyCode() == KeyEvent.VK_LEFT |
           evt.getKeyCode() == KeyEvent.VK_RIGHT)
            gameWorld.handleKey(evt.getKeyCode());
        aps++;
    }//GEN-LAST:event_formKeyPressed


    public synchronized void iniciar(){
        isWorking = true;
        thread = new Thread(this, "Graficos");
        thread.start();
    }
    
    public synchronized void detener(){
        isWorking = false;
        
        try {
            thread.join();
        } catch (InterruptedException ex) {
        }
    }

    public void actualizar(){
        aps++;
    }
    
    public void mostrar(){
        BufferStrategy estrategia = getBufferStrategy();
        
        if (estrategia == null){
            createBufferStrategy(3);
            return;
        }
        pantalla.limpiar();
        pantalla.mostrar(x, y);
        
        System.arraycopy(pantalla.pixeles, 0, pixeles, 0, pixeles.length);
        
//        for (int i=0; i< pixeles.length; i++){
//            pixeles[i] = pantalla.pixeles[i];
//        }

        Graphics g = estrategia.getDrawGraphics();
        g.drawImage(imagen, 0, 0, getWidth(),getHeight(),null);
        g.dispose();
        estrategia.show();
        fps++;
    }
    
    @Override
    public void redraw() {
        repaint();
    }

    @Override
    public void redraw(int x, int y, int width, int height) {
        repaint(x, y, width, height);
    }

    @Override
    public void run() {
        final int NS_POR_SEGUNDO = 1000000000;
        final byte APS_OBJETIVO = 60; // Ajustar la frecuencia de actualizaciÃ³n deseada
        final double NS_POR_ACTUALIZACION = NS_POR_SEGUNDO/APS_OBJETIVO;


        long referenciaActualizacion = System.nanoTime();
        long referenciaContador = System.nanoTime();

        double tiempoTranscurrido;
        double delta = 0;

        while(isWorking){
            final long inicioBucle = System.nanoTime();

            tiempoTranscurrido = inicioBucle - referenciaActualizacion;
            referenciaActualizacion = inicioBucle;

            delta += tiempoTranscurrido/NS_POR_ACTUALIZACION;
            while(delta >= 1){
                for (Monstruo monstruo : gameWorld.getMonstruos()) {
                    monstruo.move(gameWorld.getMonstruos());
                    
                }
                gameWorld.draw(this.getGraphics());
                actualizar();
                delta--;
            }
            mostrar();

            if (System.nanoTime() - referenciaContador > NS_POR_SEGUNDO){
                setTitle("BERSERK GAME" + " || APS: " + aps + "|| FPS: " + fps);
                aps = 0;
                fps = 0;
                referenciaContador = System.nanoTime();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
